{"version":3,"sources":["C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/$_gendir lazy","C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/app.component.css","C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/app.component.html","C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/app.component.ts","C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/app.module.ts","C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/app.routing.ts","C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/core/content/content.component.html","C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/core/content/content.component.ts","C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/core/core.module.ts","C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/core/navigation/navigation.component.html","C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/core/navigation/navigation.component.ts","C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/customer/customer-details/customer-details.component.html","C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/customer/customer-details/customer-details.component.ts","C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/customer/customer-list/customer-list.component.html","C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/customer/customer-list/customer-list.component.ts","C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/customer/customer.module.ts","C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/customer/customer.routing.ts","C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/customer/customer.service.ts","C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/customer/customer.ts","C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/introduction/introduction.component.html","C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/introduction/introduction.component.ts","C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/environments/environment.ts","C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<app-navigation></app-navigation>\\n<app-content></app-content>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Http } from '@angular/http'\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n    constructor(private _httpService: Http) { }\n    apiValues: string[] = [];\n    ngOnInit() {\n        this._httpService.get('/api/values').subscribe(values => {\n            this.apiValues = values.json() as string[];\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { AppRouting } from './app.routing';\nimport { CoreModule } from './core/core.module';\nimport { IntroductionComponent } from './introduction/introduction.component';\nimport { CustomerModule } from \"./customer/customer.module\";\r\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        IntroductionComponent\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        HttpModule,\n        CoreModule,\n        CustomerModule,\n        AppRouting,\n    ],\n    providers: [],\n    exports: [IntroductionComponent],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/app.module.ts","import { IntroductionComponent } from \"./introduction/introduction.component\";\nimport { ModuleWithProviders } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst appRoutes: Routes = [\n    { path: '', component: IntroductionComponent }\n];\n\nexport const AppRouting: ModuleWithProviders = RouterModule.forRoot(appRoutes);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/app.routing.ts","module.exports = \"<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/core/content/content.component.html\n// module id = ../../../../../src/app/core/content/content.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-content',\n    templateUrl: 'content.component.html'\n})\nexport class ContentComponent {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/core/content/content.component.ts","import { NgModule } from '@angular/core';\n\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { ContentComponent } from './content/content.component';\nimport { AppRouting } from '.././app.routing';\n\n@NgModule({\n    imports: [\n        AppRouting\n    ],\n    exports: [\n        NavigationComponent,\n        ContentComponent\n    ],\n    declarations: [\n        NavigationComponent,\n        ContentComponent\n    ],\n    providers: [\n\n    ]\n})\nexport class CoreModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/core/core.module.ts","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\\\">\\n  <div class=\\\"container\\\">\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarResponsive\\\" aria-controls=\\\"navbarResponsive\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarResponsive\\\">\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"\\\">\\n            Home\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"/customers\\\">All Customers</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/core/navigation/navigation.component.html\n// module id = ../../../../../src/app/core/navigation/navigation.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-navigation',\n    templateUrl: 'navigation.component.html'\n})\nexport class NavigationComponent {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/core/navigation/navigation.component.ts","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class='panel-heading'>\\r\\n    <h1 class=\\\"mt-5\\\">{{title}}</h1>\\r\\n    <br />\\r\\n    <br />\\r\\n  </div>\\r\\n\\r\\n  <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"save()\\\">\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"name\\\"\\r\\n             [class.active]=\\\"customer.name\\\"\\r\\n             data-error=\\\"Name is required and needs to contain at least 3 chars\\\">\\r\\n        Name:\\r\\n      </label>\\r\\n      <input id=\\\"name\\\" type=\\\"text\\\" class=\\\"validate form-control\\\" required\\r\\n             [(ngModel)]=\\\"customer.name\\\" formControlName=\\\"name\\\"\\r\\n             [class.invalid]=\\\"form.controls['name'].touched && !form.controls['name'].valid\\\">\\r\\n\\r\\n      <div *ngIf=\\\"!form.controls['name'].valid && form.controls['name'].touched\\\"\\r\\n           class=\\\"alert alert-danger\\\">\\r\\n          \\\"Name\\\" is required and must be at least 3 characters long\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"surname\\\"\\r\\n             [class.active]=\\\"customer.surname\\\"\\r\\n             data-error=\\\"Surname is required and needs to contain at least 3 chars\\\">\\r\\n        Surname:\\r\\n      </label>\\r\\n      <input id=\\\"name\\\" type=\\\"text\\\" class=\\\"validate form-control\\\"\\r\\n             [(ngModel)]=\\\"customer.surname\\\" formControlName=\\\"surname\\\"\\r\\n             [class.invalid]=\\\"form.controls['surname'].touched && !form.controls['surname'].valid\\\">\\r\\n\\r\\n      <div *ngIf=\\\"!form.controls['surname'].valid && form.controls['surname'].touched\\\"\\r\\n           class=\\\"alert alert-danger\\\">\\r\\n        \\\"Surname\\\" is required and must be at least 3 characters long\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"address\\\"\\r\\n             [class.active]=\\\"customer.address\\\"\\r\\n             data-error=\\\"Address is required and needs to contain at least 3 chars\\\">\\r\\n        Address:\\r\\n      </label>\\r\\n      <input id=\\\"name\\\" type=\\\"text\\\" class=\\\"validate form-control\\\"\\r\\n             [(ngModel)]=\\\"customer.address\\\" formControlName=\\\"address\\\"\\r\\n             [class.invalid]=\\\"form.controls['address'].touched && !form.controls['address'].valid\\\">\\r\\n\\r\\n      <div *ngIf=\\\"!form.controls['address'].valid && form.controls['address'].touched\\\"\\r\\n           class=\\\"alert alert-danger\\\">\\r\\n        \\\"Address\\\" is required and must be at least 6 characters long\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"telephoneNumber\\\" [class.active]=\\\"customer.telephoneNumber\\\">Telephone Number:</label>\\r\\n      <input id=\\\"telephoneNumber\\\" type=\\\"text\\\" class=\\\"validate form-control\\\"\\r\\n             [(ngModel)]=\\\"customer.telephoneNumber\\\" formControlName=\\\"telephoneNumber\\\">\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"!form.controls['telephoneNumber'].valid && form.controls['telephoneNumber'].touched\\\"\\r\\n           class=\\\"alert alert-danger\\\">\\r\\n        \\\"Telephone Number\\\" is required and must be at 9 numbers long\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <button class=\\\"btn waves-effect waves-light\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Submit</button>\\r\\n  </form>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/customer/customer-details/customer-details.component.html\n// module id = ../../../../../src/app/customer/customer-details/customer-details.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CustomerService } from \"../customer.service\";\r\nimport { ICustomer } from \"../customer\";\r\nimport { Customer } from \"../customer\";\n\n@Component({\n    selector: 'app-customer-details',\n    templateUrl: 'customer-details.component.html'\n})\nexport class CustomerDetailsComponent implements OnInit {\n    private id: number;\n    private customer: Customer = new Customer();\n    private errorMessage: string;\n    private form: FormGroup;\n    private title: string;\n\n    constructor(private _httpService: CustomerService,\n        private _productService: CustomerService, private _router: Router, private _route: ActivatedRoute,\n        formBuilder: FormBuilder) {\n        this.form = formBuilder.group({\n            name: ['', [\n                Validators.required,\n                Validators.minLength(3)\n            ]],\n            surname: ['', [\n                Validators.required,\n                Validators.minLength(3)\n            ]],\n            address: ['', [\n                Validators.required,\n                Validators.minLength(6)\n            ]],\n            telephoneNumber: ['', [\n                Validators.required,\n                Validators.pattern('^\\\\d{9}$')\n            ]],\n        });\n    }\r\n\r\n    ngOnInit(): void {\n        const id = +this._route.snapshot.paramMap.get('id');\n        this.title = id ? 'Edit Customer' : 'New Customer';\n\n        if (!id)\n            return;\n\n        this._httpService.get(id).subscribe(\n            customer => this.customer = customer,\n            error => this.errorMessage = <any>error);\n    }\n\n    save() {\n        var result,\n            userValue = this.form.value as ICustomer;\n\n        const id = +this._route.snapshot.paramMap.get('id');\n\n        if (id > 0)\n            userValue.customerId = id;\n\n        if (userValue.customerId) {\n            this._httpService.update(userValue);\n            console.log('udate');\n            console.log(userValue);\n        } else {\n            //result = this.usersService.addUser(userValue);\n            this._httpService.add(userValue);\n            console.log('new record');\n            console.log(userValue);\n        }\n\n        //result.subscribe(data => this._router.navigate(['customers']));\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/customer/customer-details/customer-details.component.ts","module.exports = \"<div class='panel panel-primary'>\\r\\n  <div class='panel-heading'>\\r\\n    <h1 class=\\\"mt-5\\\">All Customers</h1>\\r\\n    <br />\\r\\n    <br />\\r\\n  </div>\\r\\n  <div class='panel-body'>\\r\\n   \\r\\n\\r\\n    <div class='table-responsive'>\\r\\n      <table class='table table-hover'  *ngIf='customers && customers.length'>\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Name</th>\\r\\n            <th>Surname</th>\\r\\n            <th>Address</th>\\r\\n            <th>Telephone Number</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor='let customer of customers' class='clickable-row' [routerLink]=\\\"['/customer', customer.customerId]\\\">\\r\\n            <td>{{customer.name}}</td>\\r\\n            <td>{{customer.surname}}</td>\\r\\n            <td>{{customer.address}}</td>\\r\\n            <td>{{customer.telephoneNumber}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf='errorMessage' class='alert alert-danger'>\\r\\n   {{ errorMessage }}\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/customer/customer-list/customer-list.component.html\n// module id = ../../../../../src/app/customer/customer-list/customer-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { CustomerService } from \".././customer.service\";\r\nimport { ICustomer } from \"../customer\";\r\n\r\n@Component({\r\n    selector: 'app-customer-list',\r\n    templateUrl: 'customer-list.component.html'\r\n})\r\n\r\n\r\nexport class CustomerListComponent implements OnInit {\r\n\r\n    customers: ICustomer[];\r\n    errorMessage: string;\r\n\r\n    constructor(private _httpService: CustomerService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._httpService.getAll()\r\n            .subscribe(customers => {\r\n                this.customers = customers\r\n            },\r\n            error => this.errorMessage = <any>error);\r\n    };\r\n\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/customer/customer-list/customer-list.component.ts","import { NgModule } from '@angular/core';\n\nimport { CustomerRouting } from './customer.routing';\nimport { CustomerListComponent } from \"./customer-list/customer-list.component\";\r\nimport { CustomerDetailsComponent } from \"./customer-details/customer-details.component\";\r\nimport { CustomerService } from \"./customer.service\";\r\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\n\n@NgModule({\n    imports: [\n        CustomerRouting,\n        CommonModule,\n        FormsModule,\r\n        ReactiveFormsModule\n    ],\n    exports: [\n        CustomerListComponent,\n        CustomerDetailsComponent\n    ],\n    declarations: [\n        CustomerListComponent,\n        CustomerDetailsComponent\n    ],\n    providers: [\n        CustomerService\n    ]\n})\nexport class CustomerModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/customer/customer.module.ts","import { ModuleWithProviders } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CustomerListComponent } from './customer-list/customer-list.component'\nimport { CustomerDetailsComponent } from './customer-details/customer-details.component'\n\nconst appRoutes: Routes = [\n    { path: 'customer/:id', component: CustomerDetailsComponent },\n    { path: 'customer', component: CustomerDetailsComponent },\n    { path: 'customers', component: CustomerListComponent }\n];\n\nexport const CustomerRouting: ModuleWithProviders = RouterModule.forRoot(appRoutes);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/customer/customer.routing.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\nimport { ICustomer } from './customer';\nimport { Headers, RequestOptions } from '@angular/http';\n\n@Injectable()\nexport class CustomerService {\n    private _url = 'http://localhost:3281/api/customer';\n\n    constructor(private _http: Http) {\n\n    }\n\n    getAll(): Observable<ICustomer[]> {\n        return this._http.get(this._url)\n            .map((response: Response) => <ICustomer[]>response.json())\n            .do(data => console.log((data)))\n            .catch(this.handleError);\n    }\n\n    get(customerId: number): Observable<ICustomer> {\n        return this._http.get(this._url + '/' + customerId)\n            .map((response: Response) => <ICustomer>response.json())\n            .catch(this.handleError);\n    }\n\n    add(customer: ICustomer) {\n\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n\r\n        let options = new RequestOptions({ headers: headers });\r\n        this._http.post(\r\n            this._url,\r\n            JSON.stringify(customer),\r\n            options\r\n        ).subscribe();   \n    }\n\n    update(customer: ICustomer) {\n\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        var ades = this._url + \"/\" + customer.customerId;\r\n        console.log(ades);\r\n        let options = new RequestOptions({ headers: headers });\r\n        this._http.put(\r\n            ades,\r\n            JSON.stringify(customer),\r\n            options\r\n        ).subscribe();\n\n    }\n\n     \n    private handleError(error: Response) {\n        console.error(error);\n        return Observable.throw(error.json().error || 'Server error');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/customer/customer.service.ts","export interface ICustomer {\r\n    customerId: number;\r\n    name: string;\r\n    surname: string;\r\n    address: string;\r\n    telephoneNumber: string;\r\n}\r\n\r\nexport class Customer implements ICustomer {\r\n    customerId: number;\r\n    name: string;\r\n    surname: string;\r\n    address: string;\r\n    telephoneNumber: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/customer/customer.ts","module.exports = \"<h1 class=\\\"mt-5\\\">Hello!</h1>\\n<br />\\n<br />\\n<div>This application is designed to manage customers. You can do the following actions:\\n  <ul>\\n    <li>Create, update or delete a customer</li>\\n    <li>Show a list of all customers</li>\\n  </ul>\\n  </div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/introduction/introduction.component.html\n// module id = ../../../../../src/app/introduction/introduction.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-introduction',\n    templateUrl: 'introduction.component.html'\n})\nexport class IntroductionComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/app/introduction/introduction.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Aleksandra/Documents/Repositories/CustomersApp/CustomersApp/CustomersApp/src/main.ts"],"sourceRoot":"webpack:///"}